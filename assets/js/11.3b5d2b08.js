(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{334:function(t,e,s){"use strict";s.r(e);var v=s(7),r=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue3"}},[t._v("#")]),t._v(" Vue3")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("这是一条提示")])]),t._v(" "),e("h3",{attrs:{id:"vue3新特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue3新特性"}},[t._v("#")]),t._v(" Vue3新特性")]),t._v(" "),e("ul",[e("li",[t._v("组合式 API")]),t._v(" "),e("li",[t._v("单文件组件中的组合式 API 语法糖 (<script setup>)*")]),t._v(" "),e("li",[t._v("Teleport 组件")]),t._v(" "),e("li",[t._v("Fragments 片段")]),t._v(" "),e("li",[t._v("Emits 组件选项**")]),t._v(" "),e("li",[t._v("来自 @vue/runtime-core 的 createRenderer API 用来创建自定义渲染函数")]),t._v(" "),e("li",[t._v("单文件组件中的状态驱动的 CSS 变量 (<style> 中的 v-bind)*")]),t._v(" "),e("li",[t._v("SFC <style scoped> 新增全局规则和针对插槽内容的规则")]),t._v(" "),e("li",[t._v("Suspense 实验性")])]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue3官方文档"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);